{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "https://savetuba.it2-server.com",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Admin: Superuser School Management",
      "description": "Endpoints for Super Administrators (SAVETUBA_ADMIN) to manage all schools."
    },
    {
      "name": "Curriculum",
      "description": "Curriculum management endpoints"
    },
    {
      "name": "Classrooms",
      "description": "Endpoints for creating, joining, and managing classrooms."
    },
    {
      "name": "Leaderboard",
      "description": "Student leaderboard endpoints"
    },
    {
      "name": "Admin: School Management",
      "description": "Endpoints for School Administrators to manage their own school."
    },
    {
      "name": "User Profile",
      "description": "Endpoints for managing the current user's profile."
    },
    {
      "name": "Badges",
      "description": "Endpoints for viewing user badges and progress."
    },
    {
      "name": "Assignments",
      "description": "Assignment management endpoints"
    },
    {
      "name": "Languages",
      "description": "Language management endpoints"
    },
    {
      "name": "Authentication",
      "description": "Endpoints for user registration, login, logout, and token management."
    }
  ],
  "paths": {
    "/api/v1/schools/{id}": {
      "get": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Get a school by ID",
        "description": "Retrieves the details of a specific school by its unique ID.",
        "operationId": "getSchoolById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved school details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Update a school",
        "description": "Updates a school's details, such as name, address, or active status.",
        "operationId": "updateSchool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchoolRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "School updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict if the new school name already exists.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Delete a school",
        "description": "Permanently deletes a school. This operation will fail if the school has any associated users.",
        "operationId": "deleteSchool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "School deleted successfully."
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN."
          },
          "404": {
            "description": "Not Found if the school ID does not exist."
          },
          "409": {
            "description": "Conflict if the school cannot be deleted due to associated users."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profile/picture": {
      "put": {
        "tags": ["User Profile"],
        "summary": "Update profile picture",
        "description": "Uploads a new profile picture for the current user. Accepts multipart/form-data. The old picture, if it exists, will be deleted. Returns a short-lived presigned URL to the new avatar.",
        "operationId": "updateProfilePicture",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile picture updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePictureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the file is invalid (e.g., wrong format, too large).",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePictureResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profile/password": {
      "put": {
        "tags": ["User Profile"],
        "summary": "Change password",
        "description": "Changes the password for the currently authenticated user. All active sessions (refresh tokens) will be invalidated.",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Password changed successfully."
          },
          "400": {
            "description": "Bad Request if the current password is incorrect or the new password is the same as the old one."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profile/me": {
      "get": {
        "tags": ["User Profile"],
        "summary": "Get my profile",
        "description": "Retrieves the profile information for the currently authenticated user.",
        "operationId": "getMyProfile",
        "responses": {
          "200": {
            "description": "Successfully retrieved profile data.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["User Profile"],
        "summary": "Update my profile",
        "description": "Updates the first name and last name of the currently authenticated user.",
        "operationId": "updateMyProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if validation on name fields fails.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["User Profile"],
        "summary": "Delete my account",
        "description": "Permanently anonymizes and deactivates the current user's account. This action is irreversible and requires password confirmation.",
        "operationId": "deleteAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Account deleted successfully."
          },
          "400": {
            "description": "Bad Request if the provided password is incorrect."
          },
          "403": {
            "description": "Forbidden for certain roles like SAVETUBA_ADMIN or School Admins who still manage a school."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/curriculum/lessons/{lessonId}": {
      "get": {
        "tags": ["Curriculum"],
        "summary": "Get lesson details by ID",
        "description": "Returns lesson info with activities. Activities don't include content.",
        "operationId": "getLessonById",
        "parameters": [
          {
            "name": "lessonId",
            "in": "path",
            "description": "Lesson ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language code (en, kk, ru)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LessonWithActivitiesResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Curriculum"],
        "summary": "Update an existing lesson with an optional thumbnail file",
        "description": "Updates lesson fields. Uses multipart/form-data. One part named 'request' contains the JSON data. Another optional part named 'file' contains the new thumbnail image.",
        "operationId": "updateLesson",
        "parameters": [
          {
            "name": "lessonId",
            "in": "path",
            "description": "Lesson ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/UpdateLessonRequest"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "New thumbnail file for the lesson (optional)"
                  }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Curriculum"],
        "summary": "Delete a lesson",
        "operationId": "deleteLesson",
        "parameters": [
          {
            "name": "lessonId",
            "in": "path",
            "description": "Lesson ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/grades/{gradeId}": {
      "get": {
        "tags": ["Curriculum"],
        "summary": "Get grade level details with paginated chapters",
        "description": "Returns grade level info with paginated chapters. Chapters don't include lessons. The 'isLastPage' field indicates if there are more chapters to load.",
        "operationId": "getGradeLevel",
        "parameters": [
          {
            "name": "gradeId",
            "in": "path",
            "description": "Grade Level ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language code (en, kk, ru)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort direction (asc or desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GradeLevelDetailSwaggerResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Curriculum"],
        "summary": "Update an existing grade level",
        "description": "Updates grade level fields. If translations are updated, returns multi-language response with all updated translations.",
        "operationId": "updateGradeLevel",
        "parameters": [
          {
            "name": "gradeId",
            "in": "path",
            "description": "Grade Level ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGradeLevelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Curriculum"],
        "summary": "Delete a grade level",
        "operationId": "deleteGradeLevel",
        "parameters": [
          {
            "name": "gradeId",
            "in": "path",
            "description": "Grade Level ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/chapters/{chapterId}": {
      "get": {
        "tags": ["Curriculum"],
        "summary": "Get chapter details with paginated lessons",
        "description": "Returns chapter info with paginated lessons. Lessons don't include activities. The 'isLastPage' field indicates if there are more lessons to load.",
        "operationId": "getChapter",
        "parameters": [
          {
            "name": "chapterId",
            "in": "path",
            "description": "Chapter ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language code (en, kk, ru)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort direction (asc or desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterWithLessonsResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Curriculum"],
        "summary": "Update an existing chapter with an optional icon file",
        "description": "Updates chapter fields. Uses multipart/form-data. One part named 'request' contains the JSON data. Another optional part named 'file' contains the new icon image.",
        "operationId": "updateChapter",
        "parameters": [
          {
            "name": "chapterId",
            "in": "path",
            "description": "Chapter ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/UpdateChapterRequest"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "New icon file for the chapter (optional)"
                  }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Curriculum"],
        "summary": "Delete a chapter",
        "operationId": "deleteChapter",
        "parameters": [
          {
            "name": "chapterId",
            "in": "path",
            "description": "Chapter ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activities/{activityId}": {
      "get": {
        "tags": ["Curriculum"],
        "summary": "Get activity details",
        "description": "Returns activity info with content.",
        "operationId": "getActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language code (en, kk, ru)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityWithContentResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Curriculum"],
        "summary": "Update an existing activity with an optional icon file",
        "description": "Updates activity fields. Uses multipart/form-data. One part named 'request' contains the JSON data. Another optional part named 'file' contains the new icon image.",
        "operationId": "updateActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/UpdateActivityRequest"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "New icon file for the activity (optional)"
                  }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseActivityResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Curriculum"],
        "summary": "Delete an activity",
        "operationId": "deleteActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activities/{activityId}/content/submission-based": {
      "put": {
        "tags": ["Curriculum"],
        "summary": "Set/Update content for submission-based activities",
        "description": "Updates the content (title, prompt, and image) for Snapshot, Image Boom, or Mastery activities. Uses multipart/form-data.",
        "operationId": "setSubmissionBasedContent",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/SubmissionBasedContentRequest"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "New image file for the activity (optional)"
                  }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activities/{activityId}/content/sorting": {
      "put": {
        "tags": ["Curriculum"],
        "summary": "Set/Update Sorting content for an activity",
        "description": "Replaces the entire sorting content for the specified activity.",
        "operationId": "setSortingContent",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SortingContentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activities/{activityId}/content/reorder": {
      "put": {
        "tags": ["Curriculum"],
        "summary": "Set/Update Reorder content for an activity",
        "description": "Replaces the entire reorder content for the specified activity.",
        "operationId": "setReorderContent",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReorderContentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activities/{activityId}/content/quiz": {
      "put": {
        "tags": ["Curriculum"],
        "summary": "Set/Update Quiz content for an activity",
        "description": "Replaces the entire quiz content for the specified activity.",
        "operationId": "setQuizContent",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizContentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activities/{activityId}/content/memory": {
      "put": {
        "tags": ["Curriculum"],
        "summary": "Set/Update Memory Game content for an activity",
        "description": "Replaces the entire memory game content for the specified activity.",
        "operationId": "setMemoryContent",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryContentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/classrooms/{id}": {
      "get": {
        "tags": ["Classrooms"],
        "summary": "Get classroom details by ID",
        "description": "Retrieves detailed information about a specific classroom, including lists of teachers and students. The current user must be a member of the classroom.",
        "operationId": "getClassroomDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved classroom details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a member of the classroom.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the classroom ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Classrooms"],
        "summary": "Update classroom details",
        "description": "Allows a TEACHER who is a member of the classroom to update its name and description.",
        "operationId": "updateClassroom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClassroomRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Classroom updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a teacher in this classroom.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the classroom ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Classrooms"],
        "summary": "Archive a classroom",
        "description": "Allows a TEACHER to archive their classroom. The classroom will no longer be active or visible to students.",
        "operationId": "archiveClassroom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Classroom archived successfully."
          },
          "403": {
            "description": "Forbidden if the user is not a teacher in this classroom."
          },
          "404": {
            "description": "Not Found if the classroom ID does not exist."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/assignments/{assignmentId}": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get assignment details",
        "description": "Get detailed information about an assignment",
        "operationId": "getAssignment",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAssignmentResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Assignments"],
        "summary": "Update an assignment",
        "description": "Teacher updates an existing assignment",
        "operationId": "updateAssignment",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAssignmentResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Assignments"],
        "summary": "Delete an assignment",
        "description": "Teacher archives an assignment",
        "operationId": "deleteAssignment",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schools": {
      "get": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Get all schools",
        "description": "Retrieves a paginated list of all schools in the system.",
        "operationId": "getAllSchools",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of schools.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageSchoolResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageSchoolResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Create a new school",
        "description": "Creates a new school in the system.",
        "operationId": "createSchool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSchoolRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "School created successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if validation fails.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict if a school with the same name already exists.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/schools/{schoolId}/admin/{userId}": {
      "post": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Assign a user as a School Administrator",
        "description": "Assigns an existing user with the 'ADMIN' role to be the administrator of a specific school.",
        "operationId": "assignAdmin",
        "parameters": [
          {
            "name": "schoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin assigned successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the user does not have the ADMIN role.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school or user ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict if the school already has an admin or the user is already an admin of another school.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/schools/{schoolId}/admin-invite": {
      "post": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Create an invitation for a School Administrator",
        "description": "Generates a single-use invitation link for a new user to register as an administrator for a specific school.",
        "operationId": "createAdminInvite",
        "parameters": [
          {
            "name": "schoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation created successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InviteResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InviteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InviteResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict if the school already has an administrator.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InviteResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/curriculum/lessons": {
      "post": {
        "tags": ["Curriculum"],
        "summary": "Create a new lesson with an optional thumbnail file",
        "description": "Creates a new lesson. Uses multipart/form-data. One part named 'request' contains the JSON data. Another optional part named 'file' contains the thumbnail image.",
        "operationId": "createLesson",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/CreateLessonRequest"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Thumbnail file for the lesson (optional)"
                  }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lesson created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MultiLanguageLessonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/grades": {
      "get": {
        "tags": ["Curriculum"],
        "summary": "Get all active grade levels with pagination",
        "description": "Returns a simplified paginated list of grade levels. Response contains only 'content' array and 'isLastPage' boolean. Parameters (page, size, sort) are not echoed back in response.",
        "operationId": "getGradeLevels",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language code (en, kk, ru)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort direction (asc or desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSimplePaginatedResponseGradeLevelResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Curriculum"],
        "summary": "Create a new grade level",
        "description": "Creates a new grade level. Returns grade level info with all created language translations, with createdAt but without updatedAt timestamp.",
        "operationId": "createGradeLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGradeLevelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Grade level created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MultiLanguageGradeLevelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/chapters": {
      "post": {
        "tags": ["Curriculum"],
        "summary": "Create a new chapter with an optional icon file",
        "description": "Creates a new chapter. Uses multipart/form-data. One part named 'request' contains the JSON data. Another optional part named 'file' contains the icon image.",
        "operationId": "createChapter",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/CreateChapterRequest"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Icon file for the chapter (optional)"
                  }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chapter created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MultiLanguageChapterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/assets": {
      "post": {
        "tags": ["Curriculum"],
        "summary": "Upload a media asset for content",
        "description": "Uploads a single image or audio file and returns its identifier (object name) to be used in content creation.",
        "operationId": "uploadAsset",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAssetUploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activities": {
      "post": {
        "tags": ["Curriculum"],
        "summary": "Create a new activity with an optional icon file",
        "description": "Creates a new activity. Uses multipart/form-data. One part named 'request' contains the JSON data. Another optional part named 'file' contains the icon image.",
        "operationId": "createActivity",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/CreateActivityRequest"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Icon file for the activity (optional)"
                  }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseActivityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/classrooms": {
      "post": {
        "tags": ["Classrooms"],
        "summary": "Create a new classroom",
        "description": "Allows a TEACHER to create a new classroom. The classroom is automatically associated with the teacher's school.",
        "operationId": "createClassroom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClassroomRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Classroom created successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if validation fails or grade level is not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a TEACHER.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/classrooms/{classroomId}/transfer/{newTeacherId}": {
      "post": {
        "tags": ["Classrooms"],
        "summary": "Transfer classroom ownership",
        "description": "Allows a TEACHER to transfer ownership of their classroom to another teacher within the same school.",
        "operationId": "transferClassroomOwnership",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "newTeacherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classroom transferred successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the new teacher is invalid (not a teacher, not in the same school).",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the current user is not the owner of the classroom.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the classroom or new teacher does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/classrooms/{classroomCode}/join": {
      "post": {
        "tags": ["Classrooms"],
        "summary": "Join a classroom with a code",
        "description": "Allows a STUDENT to join an existing, active classroom using its unique code.",
        "operationId": "joinClassroom",
        "parameters": [
          {
            "name": "classroomCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully joined the classroom.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a STUDENT.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if no active classroom matches the provided code.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict if the student is already a member of the classroom.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/classrooms/{classId}/leave": {
      "post": {
        "tags": ["Classrooms"],
        "summary": "Leave a classroom",
        "description": "Allows a STUDENT to leave a classroom they have joined.",
        "operationId": "leaveClassroom",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully left the classroom."
          },
          "403": {
            "description": "Forbidden if the user is not a STUDENT."
          },
          "404": {
            "description": "Not Found if the student is not enrolled in the specified classroom."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Registers a new user. Public registration defaults to the 'STUDENT' role. If a valid 'inviteToken' is provided, the user is assigned a role and school based on the invitation.",
        "operationId": "register",
        "parameters": [
          {
            "name": "inviteToken",
            "in": "query",
            "description": "An optional invitation token for registering with a specific role (e.g., TEACHER or ADMIN).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User registered successfully. Returns an access token and sets a refresh token in an httpOnly cookie.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if validation fails.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the inviteToken is invalid or expired.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict if a user with the provided email already exists.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "description": "Uses the httpOnly 'refreshToken' cookie to generate a new access token and a new refresh token (token rotation).",
        "operationId": "refreshToken",
        "responses": {
          "200": {
            "description": "Access token refreshed successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized if the refresh token is missing, invalid, or expired.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/oauth2/{provider}": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log in or register with an OAuth2 provider",
        "description": "Handles authentication using an OAuth2 provider like Google. If the user does not exist, a new user with the 'STUDENT' role is created.",
        "operationId": "oauth2Login",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "The name of the OAuth2 provider (e.g., 'google').",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "google"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuth2LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OAuth2 login successful.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the provider is unsupported or the token is invalid.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log out a user",
        "description": "Invalidates the current session's refresh token from the server and clears the httpOnly cookie.",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "User logged out successfully."
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log in a user",
        "description": "Authenticates a user with email and password. On success, returns an access token and sets a refresh token in an httpOnly cookie.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized if credentials are invalid.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/guest": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Get a guest access token",
        "description": "Generates a short-lived access token for an anonymous guest user.",
        "operationId": "guestLogin",
        "responses": {
          "200": {
            "description": "Guest token generated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/guest/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh a guest access token",
        "description": "Refreshes an expired guest token to get a new one. The provided token must be an expired guest token.",
        "operationId": "refreshGuestToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestTokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Guest token refreshed successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the token is not a valid, expired guest token.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments": {
      "post": {
        "tags": ["Assignments"],
        "summary": "Create a new assignment",
        "description": "Teacher creates an assignment for a classroom",
        "operationId": "createAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/submit-answer": {
      "post": {
        "tags": ["Assignments"],
        "summary": "Submit answer for activity",
        "description": "Student submits answer for a specific activity within an assignment.",
        "operationId": "submitAnswer",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitActivityAnswerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubmitAnswerResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/review-submission": {
      "post": {
        "tags": ["Assignments"],
        "summary": "Review submission",
        "description": "Teacher reviews a submission (approve/reject/reset)",
        "operationId": "reviewSubmission",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionReviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/my-school/teacher-invite": {
      "post": {
        "tags": ["Admin: School Management"],
        "summary": "Create a teacher invitation link",
        "description": "Generates a single-use invitation link for a new teacher to register and automatically join the admin's school.",
        "operationId": "createTeacherInvite",
        "responses": {
          "200": {
            "description": "Successfully created the invitation link.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InviteResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a School Administrator.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InviteResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/classrooms/{classroomId}/assign-teacher/{teacherId}": {
      "post": {
        "tags": ["Admin: School Management"],
        "summary": "Assign a teacher to a classroom",
        "description": "Assigns a teacher to a classroom within the admin's school. The classroom must not have a teacher currently assigned.",
        "operationId": "assignTeacher",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teacherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher assigned successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the classroom already has a teacher or the user is not a valid teacher for this school.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if classroom or teacher ID is incorrect.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/schools/{schoolId}/teachers": {
      "get": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Get all teachers in a school",
        "description": "Retrieves a paginated list of all teachers for a specific school by its ID.",
        "operationId": "getSchoolTeachers",
        "parameters": [
          {
            "name": "schoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of teachers.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/schools/{schoolId}/classrooms": {
      "get": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Get all classrooms in a school",
        "description": "Retrieves a paginated list of all active classrooms for a specific school by its ID.",
        "operationId": "getSchoolClassrooms",
        "parameters": [
          {
            "name": "schoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of classrooms.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageClassroomSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageClassroomSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/schools/{schoolId}/admin": {
      "get": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Get the administrator of a school",
        "description": "Retrieves the details of the School Administrator for a specific school by its ID.",
        "operationId": "getSchoolAdmin",
        "parameters": [
          {
            "name": "schoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the school administrator.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school ID or its administrator does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Admin: Superuser School Management"],
        "summary": "Unassign an administrator from a school",
        "description": "Removes the administrator role from the user currently managing the school.",
        "operationId": "unassignAdmin",
        "parameters": [
          {
            "name": "schoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin unassigned successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a SAVETUBA_ADMIN.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the school ID does not exist.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/leaderboard/global": {
      "get": {
        "tags": ["Leaderboard"],
        "summary": "Get global leaderboard",
        "description": "Returns top students across all classrooms",
        "operationId": "getGlobalLeaderboard",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseLeaderboardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leaderboard/classroom/{classroomId}": {
      "get": {
        "tags": ["Leaderboard"],
        "summary": "Get classroom leaderboard",
        "description": "Returns ranked list of students in a classroom by experience points",
        "operationId": "getClassroomLeaderboard",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "topN",
            "in": "query",
            "description": "Include only top N students (optional)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseLeaderboardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leaderboard/classroom/{classroomId}/student/{studentId}": {
      "get": {
        "tags": ["Leaderboard"],
        "summary": "Get student position in classroom",
        "description": "Returns specific student's position in classroom leaderboard",
        "operationId": "getStudentPosition",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "studentId",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseStudentEntry"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/languages": {
      "get": {
        "tags": ["Languages"],
        "summary": "Get all languages",
        "operationId": "getLanguages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListLanguageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/grades/available": {
      "get": {
        "tags": ["Curriculum"],
        "summary": "Get available grade levels for student",
        "description": "Returns grade levels that have active assignments for student",
        "operationId": "getAvailableGrades",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language code (en, kk, ru)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListGradeLevelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curriculum/activity-types": {
      "get": {
        "tags": ["Curriculum"],
        "summary": "Get all activity types",
        "operationId": "getActivityTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListString"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/classrooms/my-classrooms": {
      "get": {
        "tags": ["Classrooms"],
        "summary": "Get my classrooms (for Teachers)",
        "description": "Retrieves a paginated list of classrooms for the currently authenticated TEACHER.",
        "operationId": "getMyClassroomsForTeacher",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved classrooms.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageClassroomSummaryResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a TEACHER.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageClassroomSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/classrooms/my-classroom": {
      "get": {
        "tags": ["Classrooms"],
        "summary": "Get my classroom (for Students)",
        "description": "Retrieves the single classroom for the currently authenticated STUDENT.",
        "operationId": "getMyClassroomForStudent",
        "responses": {
          "200": {
            "description": "Successfully retrieved the classroom.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a STUDENT.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the student is not enrolled in any classroom.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/badges/my": {
      "get": {
        "tags": ["Badges"],
        "summary": "Get my badges and progress",
        "description": "Retrieves a list of all badges for the currently authenticated STUDENT. The list is split into two parts: unlocked badges (already earned) and locked badges (not yet earned), including the student's current progress towards them.",
        "operationId": "getMyBadges",
        "responses": {
          "200": {
            "description": "Successfully retrieved badge information.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserBadgeProgressResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a STUDENT.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserBadgeProgressResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/assignments/{assignmentId}/submissions": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get submissions for review",
        "description": "Teacher gets submission-based answers for review",
        "operationId": "getSubmissionsForReview",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageSubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/submissions/{answerId}": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get submission details",
        "description": "Teacher gets detailed submission information",
        "operationId": "getSubmissionDetails",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "answerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/student/{studentId}/activity/{activityId}/answers": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get student's answer history for an activity",
        "description": "Teacher gets a specific student's answer history for an activity in an assignment",
        "operationId": "getStudentAnswerHistoryForActivity",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListStudentAnswerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/statistics": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get assignment statistics",
        "description": "Teacher gets statistics for an assignment",
        "operationId": "getAssignmentStatistics",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAssignmentStatisticsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/progress": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get assignment progress for all students",
        "description": "Teacher gets progress overview for an assignment",
        "operationId": "getAssignmentProgress",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAssignmentProgressResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/is-expired": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Check if assignment is expired",
        "description": "Check assignment expiration status",
        "operationId": "checkIfExpired",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/{assignmentId}/activity/{activityId}/my-answers": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get my answer history for an activity",
        "description": "Student gets their answer history for an activity in an assignment",
        "operationId": "getMyAnswerHistoryForActivity",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListStudentAnswerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/my": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get my assignments",
        "description": "Student gets their assigned tasks",
        "operationId": "getMyAssignments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/my-grouped": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get my assignments grouped by status",
        "description": "Student gets assignments grouped by status",
        "operationId": "getMyAssignmentsGrouped",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseMapStringListAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assignments/classroom/{classroomId}": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get assignments for a classroom",
        "description": "Get all assignments for a specific classroom",
        "operationId": "getClassroomAssignments",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "activeOnly",
            "in": "query",
            "description": "Show only active assignments",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/my-school": {
      "get": {
        "tags": ["Admin: School Management"],
        "summary": "Get current Admin's school details",
        "description": "Fetches the details of the school associated with the currently authenticated School Administrator.",
        "operationId": "getMySchool",
        "responses": {
          "200": {
            "description": "Successfully retrieved school details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a School Administrator.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if the admin is not associated with any school.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/my-school/teachers": {
      "get": {
        "tags": ["Admin: School Management"],
        "summary": "Get teachers in the Admin's school",
        "description": "Retrieves a paginated list of all teachers registered in the admin's school.",
        "operationId": "getTeachersInMySchool",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of teachers.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserSummaryResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a School Administrator.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/my-school/classrooms": {
      "get": {
        "tags": ["Admin: School Management"],
        "summary": "Get classrooms in the Admin's school",
        "description": "Retrieves a paginated list of all classrooms within the admin's school.",
        "operationId": "getClassroomsInMySchool",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of classrooms.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageClassroomSummaryResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the user is not a School Administrator.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageClassroomSummaryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/hello": {
      "get": {
        "tags": ["test-controller"],
        "operationId": "sayHello",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/bye": {
      "get": {
        "tags": ["test-controller"],
        "operationId": "sayBye",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/classrooms/{classId}/students/{studentId}": {
      "delete": {
        "tags": ["Classrooms"],
        "summary": "Remove a student from a classroom",
        "description": "Allows a TEACHER to remove a student from their classroom. This is a soft delete.",
        "operationId": "removeStudentFromClassroom",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Student removed successfully."
          },
          "403": {
            "description": "Forbidden if the user is not a teacher in this classroom."
          },
          "404": {
            "description": "Not Found if the classroom or student enrollment does not exist."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/assignments/{assignmentId}/student/{studentId}/activity/{activityId}/reset-attempts": {
      "delete": {
        "tags": ["Assignments"],
        "summary": "Reset attempts for a student on a specific activity",
        "description": "Teacher unlocks the task for redo by deleting previous answers.",
        "operationId": "resetAttempts",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/classrooms/{classroomId}/unassign-teacher": {
      "delete": {
        "tags": ["Admin: School Management"],
        "summary": "Unassign a teacher from a classroom",
        "description": "Removes the teacher from a classroom within the admin's school, leaving it without an assigned teacher.",
        "operationId": "unassignTeacher",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher unassigned successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found if classroom ID is incorrect.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateSchoolRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 2
          },
          "address": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "SchoolResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "ProfilePictureResponse": {
        "type": "object",
        "properties": {
          "avatarUrl": {
            "type": "string"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "minLength": 1
          },
          "newPassword": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 8
          }
        },
        "required": ["currentPassword", "newPassword"]
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "ClassroomSummaryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "gradeLevelCode": {
            "type": "string"
          }
        }
      },
      "ProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "experiencePoints": {
            "type": "integer",
            "format": "int64"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "levelProgress": {
            "type": "integer",
            "format": "int32"
          },
          "experienceToNextLevel": {
            "type": "integer",
            "format": "int64"
          },
          "isNewUser": {
            "type": "boolean"
          },
          "preferredLanguageCode": {
            "type": "string"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "classroom": {
            "$ref": "#/components/schemas/ClassroomSummaryResponse"
          }
        }
      },
      "LessonTranslationRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["title"]
      },
      "UpdateLessonRequest": {
        "type": "object",
        "description": "JSON data for the lesson update",
        "properties": {
          "lessonOrder": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "thumbnailBlurHash": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LessonTranslationRequest"
            }
          }
        }
      },
      "ApiResponseObject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {},
          "message": {
            "type": "string"
          }
        }
      },
      "GradeLevelTranslationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["name"]
      },
      "UpdateGradeLevelRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "iconUrl": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string",
            "pattern": "^#[0-9A-Fa-f]{6}$"
          },
          "isActive": {
            "type": "boolean"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GradeLevelTranslationRequest"
            }
          }
        }
      },
      "ChapterTranslationRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["name", "title"]
      },
      "UpdateChapterRequest": {
        "type": "object",
        "description": "JSON data for the chapter update",
        "properties": {
          "chapterOrder": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "iconUrl": {
            "type": "string"
          },
          "iconBlurHash": {
            "type": "string"
          },
          "colorScheme": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChapterTranslationRequest"
            }
          }
        }
      },
      "ActivityTranslationRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1
          },
          "prompt": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["prompt", "title"]
      },
      "UpdateActivityRequest": {
        "type": "object",
        "description": "JSON data for the activity update",
        "properties": {
          "activityType": {
            "type": "string"
          },
          "activityOrder": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "iconUrl": {
            "type": "string"
          },
          "iconBlurHash": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "content": {},
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ActivityTranslationRequest"
            }
          }
        }
      },
      "ActivityResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lessonId": {
            "type": "integer",
            "format": "int64"
          },
          "activityType": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "iconBlurHash": {
            "type": "string"
          },
          "activityOrder": {
            "type": "integer",
            "format": "int32"
          },
          "backgroundColor": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "content": {},
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseActivityResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ActivityResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SubmissionBasedContentRequest": {
        "type": "object",
        "description": "JSON data for the activity content update",
        "properties": {
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ActivityTranslationRequest"
            }
          }
        }
      },
      "CategoryRequest": {
        "type": "object",
        "properties": {
          "categoryOrder": {
            "type": "integer",
            "format": "int32"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TranslationRequest"
            },
            "minProperties": 1
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemRequest"
            },
            "minItems": 1
          }
        },
        "required": ["categoryOrder", "items", "translations"]
      },
      "ItemRequest": {
        "type": "object",
        "properties": {
          "itemOrder": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string"
          },
          "imageBlurHash": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ItemTranslationRequest"
            }
          }
        },
        "required": ["itemOrder"]
      },
      "ItemTranslationRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      },
      "SortingContentRequest": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryRequest"
            },
            "minItems": 1
          }
        },
        "required": ["categories"]
      },
      "TranslationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["name"]
      },
      "ReorderContentRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemRequest"
            },
            "minItems": 1
          }
        },
        "required": ["items"]
      },
      "AnswerOptionRequest": {
        "type": "object",
        "properties": {
          "optionOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isCorrect": {
            "type": "boolean"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TranslationRequest"
            },
            "minProperties": 1
          }
        },
        "required": ["isCorrect", "optionOrder", "translations"]
      },
      "QuestionRequest": {
        "type": "object",
        "properties": {
          "questionOrder": {
            "type": "integer",
            "format": "int32"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TranslationRequest"
            },
            "minProperties": 1
          },
          "answerOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerOptionRequest"
            },
            "maxItems": 2147483647,
            "minItems": 2
          }
        },
        "required": ["answerOptions", "questionOrder", "translations"]
      },
      "QuizContentRequest": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionRequest"
            },
            "minItems": 1
          }
        },
        "required": ["questions"]
      },
      "MemoryContentRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemoryItemRequest"
            },
            "minItems": 1
          }
        },
        "required": ["items"]
      },
      "MemoryItemRequest": {
        "type": "object",
        "properties": {
          "itemOrder": {
            "type": "integer",
            "format": "int32"
          },
          "hasImage": {
            "type": "boolean"
          },
          "imageUrl": {
            "type": "string"
          },
          "imageBlurHash": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TranslationRequest"
            },
            "minProperties": 1
          }
        },
        "required": ["hasImage", "itemOrder", "translations"]
      },
      "UpdateClassroomRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\p{L}\\d\\s'.,-]+$"
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          }
        },
        "required": ["name"]
      },
      "ClassroomResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "gradeLevelCode": {
            "type": "string"
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSummaryResponse"
            }
          },
          "students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSummaryResponse"
            }
          }
        }
      },
      "UserSummaryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "UpdateAssignmentRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 0
          },
          "dueAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseAssignmentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AssignmentResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AssignmentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "classroomId": {
            "type": "integer",
            "format": "int64"
          },
          "lessonId": {
            "type": "integer",
            "format": "int64"
          },
          "teacherId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "bestScore": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          },
          "isExpired": {
            "type": "boolean"
          },
          "totalActivities": {
            "type": "integer",
            "format": "int32"
          },
          "answeredActivities": {
            "type": "integer",
            "format": "int32"
          },
          "correctActivities": {
            "type": "integer",
            "format": "int32"
          },
          "statisticsSummary": {
            "$ref": "#/components/schemas/StatisticsSummary"
          },
          "lessonTitle": {
            "type": "string"
          },
          "chapterTitle": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StatisticsSummary": {
        "type": "object",
        "properties": {
          "averageScore": {
            "type": "number",
            "format": "double"
          },
          "completedStudents": {
            "type": "integer",
            "format": "int32"
          },
          "totalStudents": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateSchoolRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 2
          },
          "address": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0
          }
        },
        "required": ["name"]
      },
      "InviteResponse": {
        "type": "object",
        "properties": {
          "inviteToken": {
            "type": "string"
          },
          "registrationLink": {
            "type": "string"
          }
        }
      },
      "CreateLessonRequest": {
        "type": "object",
        "description": "JSON data for the lesson",
        "properties": {
          "chapterId": {
            "type": "integer",
            "format": "int64"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "thumbnailBlurHash": {
            "type": "string"
          },
          "lessonOrder": {
            "type": "integer",
            "format": "int32"
          },
          "backgroundColor": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LessonTranslationRequest"
            }
          }
        },
        "required": ["chapterId", "lessonOrder", "translations"]
      },
      "LessonTranslationData": {
        "type": "object",
        "description": "Lesson translation data",
        "properties": {
          "title": {
            "type": "string",
            "description": "Translated lesson title",
            "example": "Счет 1-5"
          }
        }
      },
      "MultiLanguageLessonResponse": {
        "type": "object",
        "description": "Lesson information with multiple language translations",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Lesson ID",
            "example": 1
          },
          "chapterId": {
            "type": "integer",
            "format": "int64",
            "description": "Chapter ID",
            "example": 1
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Lesson thumbnail URL",
            "example": "https://example.com/thumb.png"
          },
          "thumbnailBlurHash": {
            "type": "string",
            "description": "Lesson thumbnail blur hash for loading placeholder"
          },
          "lessonOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Lesson order within chapter",
            "example": 1
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#FF9800"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LessonTranslationData"
            },
            "description": "Translations for different languages"
          }
        }
      },
      "CreateGradeLevelRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "iconUrl": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string",
            "pattern": "^#[0-9A-Fa-f]{6}$"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GradeLevelTranslationRequest"
            }
          }
        },
        "required": ["displayOrder", "name", "translations"]
      },
      "GradeLevelTranslationData": {
        "type": "object",
        "description": "Grade level translation data",
        "properties": {
          "name": {
            "type": "string",
            "description": "Translated grade level name",
            "example": 1
          }
        }
      },
      "MultiLanguageGradeLevelResponse": {
        "type": "object",
        "description": "Grade level information with multiple language translations",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Grade level ID",
            "example": 1
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Display order",
            "example": 2
          },
          "iconUrl": {
            "type": "string",
            "description": "Icon URL",
            "example": "https://example.com/grade2.png"
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#FF5733"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether grade level is active",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GradeLevelTranslationData"
            },
            "description": "Translations for different languages"
          }
        }
      },
      "CreateChapterRequest": {
        "type": "object",
        "description": "JSON data for the chapter",
        "properties": {
          "gradeLevelId": {
            "type": "integer",
            "format": "int64"
          },
          "iconUrl": {
            "type": "string"
          },
          "iconBlurHash": {
            "type": "string"
          },
          "chapterOrder": {
            "type": "integer",
            "format": "int32"
          },
          "colorScheme": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChapterTranslationRequest"
            }
          }
        },
        "required": ["chapterOrder", "gradeLevelId", "translations"]
      },
      "ChapterTranslationData": {
        "type": "object",
        "description": "Chapter translation data",
        "properties": {
          "title": {
            "type": "string",
            "description": "Translated chapter title",
            "example": "Глава 1"
          },
          "name": {
            "type": "string",
            "description": "Translated chapter name",
            "example": "Числа 1-10"
          }
        }
      },
      "MultiLanguageChapterResponse": {
        "type": "object",
        "description": "Chapter information with multiple language translations",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Chapter ID",
            "example": 1
          },
          "gradeLevelId": {
            "type": "integer",
            "format": "int64",
            "description": "Grade level ID",
            "example": 1
          },
          "iconUrl": {
            "type": "string",
            "description": "Chapter icon URL",
            "example": "https://example.com/icon.png"
          },
          "iconBlurHash": {
            "type": "string",
            "description": "Chapter icon blur hash for loading placeholder"
          },
          "chapterOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Chapter order within grade level",
            "example": 1
          },
          "colorScheme": {
            "type": "string",
            "description": "Color scheme",
            "example": "blue"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChapterTranslationData"
            },
            "description": "Translations for different languages"
          }
        }
      },
      "ApiResponseAssetUploadResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AssetUploadResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AssetUploadResponse": {
        "type": "object",
        "properties": {
          "objectName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "CreateActivityRequest": {
        "type": "object",
        "description": "JSON data for the activity",
        "properties": {
          "lessonId": {
            "type": "integer",
            "format": "int64"
          },
          "activityType": {
            "type": "string",
            "minLength": 1
          },
          "iconUrl": {
            "type": "string"
          },
          "iconBlurHash": {
            "type": "string"
          },
          "activityOrder": {
            "type": "integer",
            "format": "int32"
          },
          "backgroundColor": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ActivityTranslationRequest"
            }
          }
        },
        "required": [
          "activityOrder",
          "activityType",
          "lessonId",
          "translations"
        ]
      },
      "CreateClassroomRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\p{L}\\d\\s'.,-]+$"
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "gradeLevelCode": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["gradeLevelCode", "name"]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 8
          }
        },
        "required": ["email", "password"]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "OAuth2LoginRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["token"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["email", "password"]
      },
      "GuestTokenRefreshRequest": {
        "type": "object",
        "properties": {
          "expiredToken": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["expiredToken"]
      },
      "CreateAssignmentRequest": {
        "type": "object",
        "properties": {
          "classroomId": {
            "type": "integer",
            "format": "int64"
          },
          "lessonId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 0
          },
          "dueAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["classroomId", "lessonId", "title"]
      },
      "SubmitActivityAnswerRequest": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "answerData": {}
        },
        "required": ["activityId", "answerData"]
      },
      "ApiResponseSubmitAnswerResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/SubmitAnswerResult"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ExperienceReward": {
        "type": "object",
        "properties": {
          "experienceGained": {
            "type": "integer",
            "format": "int32"
          },
          "totalExperience": {
            "type": "integer",
            "format": "int64"
          },
          "previousLevel": {
            "type": "integer",
            "format": "int32"
          },
          "newLevel": {
            "type": "integer",
            "format": "int32"
          },
          "leveledUp": {
            "type": "boolean"
          },
          "experienceToNextLevel": {
            "type": "integer",
            "format": "int64"
          },
          "levelProgress": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "StudentAnswerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "activityTitle": {
            "type": "string"
          },
          "activityType": {
            "type": "string"
          },
          "isCorrect": {
            "type": "boolean"
          },
          "answerData": {},
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"]
          },
          "answeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "attemptNumber": {
            "type": "integer",
            "format": "int32"
          },
          "experienceReward": {
            "$ref": "#/components/schemas/ExperienceReward"
          }
        }
      },
      "SubmitAnswerResult": {
        "type": "object",
        "properties": {
          "answer": {
            "$ref": "#/components/schemas/StudentAnswerResponse"
          }
        }
      },
      "SubmissionReviewRequest": {
        "type": "object",
        "properties": {
          "answerId": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "enum": ["APPROVE", "REJECT"]
          },
          "feedback": {
            "type": "string"
          }
        },
        "required": ["action", "answerId"]
      },
      "ApiResponseSubmissionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/SubmissionResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SubmissionResponse": {
        "type": "object",
        "properties": {
          "answerId": {
            "type": "integer",
            "format": "int64"
          },
          "attemptId": {
            "type": "integer",
            "format": "int64"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int64"
          },
          "studentId": {
            "type": "integer",
            "format": "int64"
          },
          "studentName": {
            "type": "string"
          },
          "studentEmail": {
            "type": "string"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "activityTitle": {
            "type": "string"
          },
          "activityType": {
            "type": "string"
          },
          "answerData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"]
          },
          "feedback": {
            "type": "string"
          },
          "answeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageSchoolResponse": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchoolResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageUserSummaryResponse": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSummaryResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageClassroomSummaryResponse": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassroomSummaryResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseLeaderboardResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LeaderboardResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LeaderboardResponse": {
        "type": "object",
        "description": "Leaderboard response with ranked students",
        "properties": {
          "classroomId": {
            "type": "integer",
            "format": "int64",
            "description": "Classroom ID (null for global leaderboard)"
          },
          "classroomName": {
            "type": "string",
            "description": "Classroom name (null for global leaderboard)"
          },
          "students": {
            "type": "array",
            "description": "List of students with their rankings",
            "items": {
              "$ref": "#/components/schemas/StudentEntry"
            }
          },
          "currentUserPosition": {
            "$ref": "#/components/schemas/StudentEntry",
            "description": "Current user's position (if they're a student)"
          },
          "totalStudents": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of students"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "description": "Total pages available"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32",
            "description": "Current page number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when leaderboard was generated"
          },
          "lastPage": {
            "type": "boolean"
          },
          "global": {
            "type": "boolean"
          }
        }
      },
      "StudentEntry": {
        "type": "object",
        "description": "Student entry in leaderboard",
        "properties": {
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Position in leaderboard",
            "example": 1
          },
          "studentId": {
            "type": "integer",
            "format": "int64",
            "description": "Student ID",
            "example": 123
          },
          "firstName": {
            "type": "string",
            "description": "Student's first name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Student's last name",
            "example": "Doe"
          },
          "avatarUrl": {
            "type": "string",
            "description": "Avatar URL"
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "description": "Current level",
            "example": 5
          },
          "experiencePoints": {
            "type": "integer",
            "format": "int64",
            "description": "Total experience points",
            "example": 4500
          },
          "experienceToNextLevel": {
            "type": "integer",
            "format": "int64",
            "description": "Experience needed for next level",
            "example": 500
          },
          "levelProgress": {
            "type": "integer",
            "format": "int32",
            "description": "Progress to next level (0-99%)",
            "example": 50
          }
        }
      },
      "ApiResponseStudentEntry": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/StudentEntry"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ApiResponseListLanguageResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageResponse"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LanguageResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LessonWithActivitiesResponse": {
        "type": "object",
        "description": "Lesson information with activities",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Lesson ID",
            "example": 1
          },
          "chapterId": {
            "type": "integer",
            "format": "int64",
            "description": "Chapter ID",
            "example": 1
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Lesson thumbnail URL",
            "example": "https://example.com/thumb.png"
          },
          "thumbnailBlurHash": {
            "type": "string",
            "description": "Lesson thumbnail blur hash for loading placeholder"
          },
          "lessonOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Lesson order within chapter",
            "example": 1
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#FF9800"
          },
          "title": {
            "type": "string",
            "description": "Translated lesson title",
            "example": "Счет 1-5"
          },
          "activities": {
            "type": "array",
            "description": "Activities in this lesson",
            "items": {
              "$ref": "#/components/schemas/ActivityResponse"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "ApiResponseSimplePaginatedResponseGradeLevelResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/SimplePaginatedResponseGradeLevelResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "GradeLevelResponse": {
        "type": "object",
        "description": "Grade level basic information",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Grade level ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Translated grade level name",
            "example": 2
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Display order",
            "example": 2
          },
          "iconUrl": {
            "type": "string",
            "description": "Icon URL",
            "example": "https://example.com/grade2.png"
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#FF5733"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether grade level is active",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "SimplePaginatedResponseGradeLevelResponse": {
        "type": "object",
        "description": "Simplified paginated response",
        "properties": {
          "content": {
            "type": "array",
            "description": "List of items for current page",
            "items": {
              "$ref": "#/components/schemas/GradeLevelResponse"
            }
          },
          "isLastPage": {
            "type": "boolean",
            "description": "Whether this is the last page",
            "example": false
          }
        }
      },
      "ChapterResponse": {
        "type": "object",
        "description": "Chapter information",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Chapter ID",
            "example": 1
          },
          "gradeLevelId": {
            "type": "integer",
            "format": "int64",
            "description": "Grade level ID",
            "example": 1
          },
          "iconUrl": {
            "type": "string",
            "description": "Chapter icon URL",
            "example": "https://example.com/icon.png"
          },
          "iconBlurHash": {
            "type": "string",
            "description": "Chapter icon blur hash for loading placeholder"
          },
          "chapterOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Chapter order within grade level",
            "example": 1
          },
          "colorScheme": {
            "type": "string",
            "description": "Color scheme",
            "example": "blue"
          },
          "title": {
            "type": "string",
            "description": "Translated chapter title",
            "example": "Глава 1"
          },
          "name": {
            "type": "string",
            "description": "Translated chapter name",
            "example": "Числа 1-10"
          },
          "lessons": {
            "type": "array",
            "description": "Lessons in this chapter (only in detailed view)",
            "items": {
              "$ref": "#/components/schemas/LessonResponse"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp (not returned on create)"
          },
          "isLastPage": {
            "type": "boolean",
            "description": "Whether this is the last page of lessons (only in detailed view)",
            "example": true
          }
        }
      },
      "GradeLevelDetailSwaggerResponse": {
        "type": "object",
        "description": "Detailed grade level information with chapters",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Grade level ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Translated grade level name",
            "example": 2
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Display order",
            "example": 2
          },
          "iconUrl": {
            "type": "string",
            "description": "Icon URL",
            "example": "https://example.com/grade2.png"
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#FF5733"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether grade level is active",
            "example": true
          },
          "chapters": {
            "type": "array",
            "description": "Chapters in this grade level (without lessons)",
            "items": {
              "$ref": "#/components/schemas/ChapterResponse"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "isLastPage": {
            "type": "boolean",
            "description": "Whether this is the last page of chapters",
            "example": true
          }
        }
      },
      "LessonResponse": {
        "type": "object",
        "description": "Lesson information",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Lesson ID",
            "example": 1
          },
          "chapterId": {
            "type": "integer",
            "format": "int64",
            "description": "Chapter ID",
            "example": 1
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Lesson thumbnail URL",
            "example": "https://example.com/thumb.png"
          },
          "thumbnailBlurHash": {
            "type": "string",
            "description": "Lesson thumbnail blur hash for loading placeholder"
          },
          "lessonOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Lesson order within chapter",
            "example": 1
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#FF9800"
          },
          "title": {
            "type": "string",
            "description": "Translated lesson title",
            "example": "Счет 1-5"
          },
          "hasAccess": {
            "type": "boolean",
            "description": "Whether current user has access to this lesson",
            "example": true
          },
          "activities": {
            "type": "array",
            "description": "Activities in this lesson (only in detailed view)",
            "items": {
              "$ref": "#/components/schemas/ActivityResponse"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp (not returned on create)"
          },
          "isLastPage": {
            "type": "boolean",
            "description": "Whether this is the last page of activities (only in detailed view)",
            "example": true
          }
        }
      },
      "ApiResponseListGradeLevelResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GradeLevelResponse"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ChapterWithLessonsResponse": {
        "type": "object",
        "description": "Chapter information with lessons",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Chapter ID",
            "example": 1
          },
          "gradeLevelId": {
            "type": "integer",
            "format": "int64",
            "description": "Grade level ID",
            "example": 1
          },
          "iconUrl": {
            "type": "string",
            "description": "Chapter icon URL",
            "example": "https://example.com/icon.png"
          },
          "iconBlurHash": {
            "type": "string",
            "description": "Chapter icon blur hash for loading placeholder"
          },
          "chapterOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Chapter order within grade level",
            "example": 1
          },
          "colorScheme": {
            "type": "string",
            "description": "Color scheme",
            "example": "blue"
          },
          "title": {
            "type": "string",
            "description": "Translated chapter title",
            "example": "Глава 1"
          },
          "name": {
            "type": "string",
            "description": "Translated chapter name",
            "example": "Числа 1-10"
          },
          "lessons": {
            "type": "array",
            "description": "Lessons in this chapter",
            "items": {
              "$ref": "#/components/schemas/LessonWithoutActivitiesResponse"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "isLastPage": {
            "type": "boolean",
            "description": "Whether this is the last page of lessons (only when pagination is used)",
            "example": true
          }
        }
      },
      "LessonWithoutActivitiesResponse": {
        "type": "object",
        "description": "Lesson information without activities",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Lesson ID",
            "example": 1
          },
          "chapterId": {
            "type": "integer",
            "format": "int64",
            "description": "Chapter ID",
            "example": 1
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Lesson thumbnail URL",
            "example": "https://example.com/thumb.png"
          },
          "thumbnailBlurHash": {
            "type": "string",
            "description": "Lesson thumbnail blur hash for loading placeholder"
          },
          "lessonOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Lesson order within chapter",
            "example": 1
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#FF9800"
          },
          "title": {
            "type": "string",
            "description": "Translated lesson title",
            "example": "Счет 1-5"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "ApiResponseListString": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ActivityWithContentResponse": {
        "type": "object",
        "description": "Activity information with content",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Activity ID",
            "example": 1
          },
          "lessonId": {
            "type": "integer",
            "format": "int64",
            "description": "Lesson ID",
            "example": 1
          },
          "activityType": {
            "type": "string",
            "description": "Activity type",
            "example": "Quiz"
          },
          "iconUrl": {
            "type": "string",
            "description": "Activity icon URL",
            "example": "https://example.com/icon.png"
          },
          "iconBlurHash": {
            "type": "string",
            "description": "Activity icon blur hash for loading placeholder"
          },
          "activityOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Activity order within lesson",
            "example": 1
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color in hex",
            "example": "#4CAF50"
          },
          "title": {
            "type": "string",
            "description": "Translated activity title",
            "example": "Выберите правильный ответ"
          },
          "prompt": {
            "type": "string",
            "description": "Translated activity prompt",
            "example": "Сколько будет 2 + 2?"
          },
          "content": {
            "description": "Dynamic content based on activity type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemoryGameContentResponse"
              },
              {
                "$ref": "#/components/schemas/QuizContentResponse"
              },
              {
                "$ref": "#/components/schemas/SortingContentResponse"
              },
              {
                "$ref": "#/components/schemas/ReorderContentResponse"
              },
              {
                "$ref": "#/components/schemas/SubmissionBasedContentResponse"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "MemoryGameContentResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "AnswerOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "answerText": {
            "type": "string"
          },
          "isCorrect": {
            "type": "boolean"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "questionText": {
            "type": "string"
          },
          "answerOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerOption"
            }
          }
        }
      },
      "QuizContentResponse": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "SortingContentResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "ReorderContentResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "SubmissionBasedContentResponse": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "imageBlurHash": {
            "type": "string"
          }
        }
      },
      "LockedBadgeResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "progress": {
            "$ref": "#/components/schemas/ProgressDto"
          }
        }
      },
      "ProgressDto": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "format": "int32"
          },
          "target": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UnlockedBadgeResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "awardedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserBadgeProgressResponse": {
        "type": "object",
        "properties": {
          "unlockedBadges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnlockedBadgeResponse"
            }
          },
          "lockedBadges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LockedBadgeResponse"
            }
          }
        }
      },
      "ApiResponsePageSubmissionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageSubmissionResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PageSubmissionResponse": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseListStudentAnswerResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentAnswerResponse"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ActivityStatistics": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int64"
          },
          "activityTitle": {
            "type": "string"
          },
          "activityType": {
            "type": "string"
          },
          "totalAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "correctAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "successRate": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ApiResponseAssignmentStatisticsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AssignmentStatisticsResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AssignmentStatisticsResponse": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int64"
          },
          "assignmentTitle": {
            "type": "string"
          },
          "totalStudents": {
            "type": "integer",
            "format": "int32"
          },
          "completedStudents": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressStudents": {
            "type": "integer",
            "format": "int32"
          },
          "notStartedStudents": {
            "type": "integer",
            "format": "int32"
          },
          "averageScore": {
            "type": "number",
            "format": "double"
          },
          "highestScore": {
            "type": "integer",
            "format": "int32"
          },
          "lowestScore": {
            "type": "integer",
            "format": "int32"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          },
          "activityStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStatistics"
            }
          }
        }
      },
      "ApiResponseAssignmentProgressResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AssignmentProgressResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AssignmentProgressResponse": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int64"
          },
          "assignmentTitle": {
            "type": "string"
          },
          "lessonId": {
            "type": "integer",
            "format": "int64"
          },
          "students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentProgress"
            }
          }
        }
      },
      "StudentProgress": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int64"
          },
          "studentName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "correctAnswers": {
            "type": "integer",
            "format": "int32"
          },
          "totalQuestions": {
            "type": "integer",
            "format": "int32"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "attemptId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiResponseBoolean": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ApiResponsePageAssignmentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PageAssignmentResponse"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PageAssignmentResponse": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseMapStringListAssignmentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssignmentResponse"
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DeleteAccountRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["password"]
      },
      "ApiResponseVoid": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {},
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
